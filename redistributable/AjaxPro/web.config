<?xml version="1.0"?>
<configuration>
	<configSections>
		<sectionGroup name="ajaxNet">
			<!--
				If you are using Microsoft .NET 1.1 please remove the two attributes
				requirePermission and restartOnExternalChanges, they are only supported
				with .NET 2.0.
			-->
			<section name="ajaxSettings"
				type="AjaxPro.AjaxSettingsSectionHandler,AjaxPro.2"
				requirePermission="false"
				restartOnExternalChanges="true"
			/>
		</sectionGroup>
	</configSections>
	<ajaxNet>
		<ajaxSettings>
			<urlNamespaceMappings useAssemblyQualifiedName="false" allowListOnly="false">
				<!--
					Set the attribute useAssemblyQualifiedName to true to enable
					use of assemblies placed in the GAC by using the full assembly
					qualified name.
				
					To hide internal knowledge of assemblies, classes and namespace
					you can override the name of the virtual http endpoints.
					
					<add type="Namespace.Class1,Assembly" path="mypath" />
				-->
			</urlNamespaceMappings>
			<jsonConverters includeTypeProperty="false">
				<!--
					This section can be used to add new IJavaScriptConverters to the
					Ajax.NET Professional engine. If you want to disable built-in
					converters you can use the remove tag.
			
					<remove type="Namespace.Class1,Assembly"/>
					<add type="Namespace.Class2,Assembly"/>
					
					<add type="AjaxPro.BitmapConverter,AjaxPro.2" mimeType="image/jpeg" quality="100"/>
				-->
			</jsonConverters>
			<jsonDeserializationCustomTypes default="deny">
				<allow>MyOwnNamespace.*</allow>
				<allow>System.DateTime</allow>
			</jsonDeserializationCustomTypes>
			<!--
				Set the enabled attribute to true to get Stack, TargetSize and Source 
				information if an exception has been thrown.
			-->
			<debug enabled="false" />
			<!--
				This is the default configuration used with Ajax.NET Professional. You
				can put there your static JavaScript files, or remove the path attribute
				to completly disable the files.
			
				<scriptReplacements>
					<file name="prototype" path="~/ajaxpro/prototype.ashx" />
					<file name="core" path="~/ajaxpro/core.ashx" />
					<file name="converter" path="~/ajaxpro/converter.ashx" />
				</scriptReplacements>
			-->
			<!-- <encryption cryptType="" keyType="" /> -->
			<!--
				Set the enabled attribute to true to enable the use of an Ajax.NET Professional
				token. This will send a token to the client that will be used to identify if the
				requests comes from the same PC.
			-->
			<!--<contentSecurityPolicy nonce="abcdefghijklmnopqrstuvwxyz" />-->
			<token enabled="false" sitePassword="password" />
			<!--
				The oldStyle (or now configuration) section can be used to enable old styled JavaScript code or
				functions that are not used any more. Some of them cannot be used together.
			
				<configuration>
					<renderNotASPAJAXDateTime/>
					<objectExtendPrototype/>
					<appCodeQualifiedFullName/>
					<allowNumberBooleanAsString/>
					<sessionStateDefaultNone/>
					<includeMsPrototype/>
					<renderDateTimeAsString/>
					<noUtcTime/>
					<renderJsonCompliant/>
					<useSimpleObjectNaming/>
				</configuration>
			-->
		</ajaxSettings>
	</ajaxNet>
	<!-- Common ASP.NET configuration -->
	<appSettings/>
	<connectionStrings/>
	<system.web>
		<compilation debug="false" />
		<authentication mode="Forms" />
		<httpModules>
			<!-- 
			This HttpCompressionModule is only working for requests in "ajaxpro" folder. The module
			is available for ASP.NET 2.0.
			<add name="HttpCompressionModule" type="AjaxPro.HttpCompressionModule,AjaxPro.2"/>
			-->
		</httpModules>
	</system.web>
	<!-- Handler configuration for Ajax.NET Professional -->
	<location path="ajaxpro">
		<system.web>
			<httpHandlers>
				<add verb="*" path="*.ashx" type="AjaxPro.AjaxHandlerFactory,AjaxPro.2"/>
			</httpHandlers>
		</system.web>
		<system.webServer>
			<handlers>
				<add name="@ajaxpro" verb="*" path="*.ashx" type="AjaxPro.AjaxHandlerFactory,AjaxPro.2" />
			</handlers>
		</system.webServer>
	</location>
	<!--
	If you are using the AjaxPro.BitmapConverter you have to use following location
	configuration to get a JPEG of the Bitmap.
	-->
	<!--
	<location path="ajaximage">
		<system.web>
			<httpHandlers>
				<add verb="*" path="*.ashx" type="AjaxPro.AjaxBitmapHttpHandler,AjaxPro.2"/>
			</httpHandlers>
		</system.web>
	</location>
	-->
</configuration>